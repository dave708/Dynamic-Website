body{background-color: white; margin: 0; font-family:Arial;}

#container{margin: auto; 
    width: 80%;
	background-color: #808080;
	border: 10px solid #808080;
	}
	
header{
	background-color: #ffffff;
	height: 110px;
	}

#sitename{ float: left; width: 300px; padding-top: 20px;}
#logo {float:left; width: 150px;}
	
nav{background-color: #222021;
	clear: left;
      }
	
main {background-color: #808080;
    padding: 10px;
	min-height: 300px;
 }#de8212
	
main a {background-color: #de8212; color: white; text-decoration:none; padding:5px;}
main a:hover {background-color: #de8212; color: white;}
		
footer{background-color: #cfe8ef;
    height: 30px;
    padding: 10px;}
    

/*table styles*/

table td {padding: 10px;}
table {width: 100%}

table tr:nth-child(1) {
	background-color: #cfe8ef;
    height: 40px;
	}
table tr {
	background-color:#FFFFFF;
	}
#addtestimonial table {border: 0px;}
#addtestimonial table tr td {padding: 0px; border: 0px;}
#addtestimonial table tr {background-color: #c6e1e0; border: 0px;}


.show {display:block;}

/*form styles*/
#commentform { 
	       font-family: Arial;
                 width: auto;
	     }
label { float:left;
	width: 50px; 
	clear: left;
	text-align: left;
	padding-right: 15px;
	margin-top: 10px;
	}
input, textarea, select{margin-top: 10px; margin-left: 20px; }
#mysubmit { margin-left:85px;
		padding-bottom: 10px;
	      }
#socialmedia a {text-decoration: none;}
#socialmedia {float: right; width: auto;}
  

/*navbar styles w3schools*/
.topnav {
  overflow: hidden;
  background-color: #333;
}

.topnav a {
  float: left;
  display: block;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

.active {
  background-color: #63acab;
  color: white;
}

.topnav .icon {
  display: none;
}

.dropdown {
  float: left;
  overflow: hidden;
}

.dropdown .dropbtn {
  font-size: 17px;    
  border: none;
  outline: none;
  color: white;
  padding: 14px 16px;
  background-color: inherit;
  font-family: inherit;
  margin: 0;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.dropdown-content a {
  float: none;
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: left;
}

.topnav a:hover, .dropdown:hover .dropbtn {
  background-color: #555;
  color: white;
}

.dropdown-content a:hover {
  background-color: #ddd;
  color: black;
}

.dropdown:hover .dropdown-content {
  display: block;
}

/*media queries 768px*/

@media only screen and (max-width: 768px) {
	body{font-size:90%;}
	#commentform{width: auto; font-size: 80%;}
	#mysubmit{margin-left: 0;}
    th:nth-of-type(4){display:none;}
	td:nth-of-type(4){display:none;}

	#content{ padding: 10px;}
    #container{margin: 0; width: auto;}

   .topnav a:not(:first-child), .dropdown .dropbtn {
    display: none;
  }
  .topnav a.icon {
    float: right;
    display: block;
  }
        
  .topnav.responsive {position: relative;}
  .topnav.responsive .icon {
    position: absolute;
    right: 0;
    top: 0;
  }
  .topnav.responsive a {
    float: none;
    display: block;
    text-align: left;
  }
  .topnav.responsive .dropdown {float: none;}
  .topnav.responsive .dropdown-content {position: relative;}
  .topnav.responsive .dropdown .dropbtn {
    display: block;
    width: 100%;
    text-align: left;
  }
}

/*media queries 500px*/

@media screen and (max-width: 500px) {
  	#displayproducts td:nth-child(2){display:none;}
    #displayproducts td {width: 30%;}
    
}

.card-area {
   display: flex;                                /* defines a flex container. It enables a flex context for all its direct children */
   flex-wrap: wrap;                          /* by default, flex items will try to fit onto one line. You can can use this property to allow the items to wrap onto the next line */
   flex-direction: row;                     /* this defines the direction flex items are placed in the flex container */
   justify-content: space-between;    /* this exerts some control over items when they overflow the line */}
   
/* this style sets up the cards with a box shadow and rounded corners.  Cards will have a small margin around all sides and width set to 20% to start */
.card {
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
  width: 30%;
  border-radius: 5px;
  margin: 10px;
  background-color: white;
}

/* when the user hovers over the card the box shadow will increase */
.card:hover { box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);}

/* the image holder div houses the image and has padding of 20px */
.image-holder {padding: 20px;   }

/* the container holds the text in the bottom of the card and is styled with padding */
.cardcontainer {
  padding: 2px 20px;
}

/* the corners on the images on the cards are slightly rounded and the image is centered in its container using margin auto*/
.card img {
  border-radius: 5px 5px 0 0;
  display: block;
  margin: auto;
}

.card img:hover {opacity: 0.5; transition: 0.9s} /* sets the transparency level and transition time when hovering over the image */

/* create a div and set styles for the moredetails button*/
.moredetails {text-align: center; margin-bottom: 20px;}
.moredetails a {background-color: #ee6c4d; color: white; text-decoration: none; padding: 5px; text-decoration: none;}

/*media queries are used to change the width of the cards at different viewport sizes*/
@media only screen and (max-width: 1024px) {
	  .card {width: 45%;}
}

 @media only screen and (max-width: 600px) {
      .card {width: 90%;}
}

 .card-area {
   display: flex;                                /* defines a flex container. It enables a flex context for all its direct children */
   flex-wrap: wrap;                          /* by default, flex items will try to fit onto one line. You can can use this property to allow the items to wrap onto the next line */
   flex-direction: row;                     /* this defines the direction flex items are placed in the flex container */
   justify-content: space-between;    /* this exerts some control over items when they overflow the line */}
   
/* this style sets up the cards with a box shadow and rounded corners.  Cards will have a small margin around all sides and width set to 20% to start */
.card {
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
  width: 30%;
  border-radius: 5px;
  margin: 10px;
  background-color: white;
}

/* when the user hovers over the card the box shadow will increase */
.card:hover { box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);}

/* the image holder div houses the image and has padding of 20px */
.image-holder {padding: 20px;   }

/* the container holds the text in the bottom of the card and is styled with padding */
.cardcontainer {
  padding: 2px 20px;
}

/* the corners on the images on the cards are slightly rounded and the image is centered in its container using margin auto*/
.card img {
  border-radius: 5px 5px 0 0;
  display: block;
  margin: auto;
}

.card img:hover {opacity: 0.5; transition: 0.9s} /* sets the transparency level and transition time when hovering over the image */

/* create a div and set styles for the moredetails button*/
.moredetails {text-align: center; margin-bottom: 20px;}
.moredetails a {background-color: #ee6c4d; color: white; text-decoration: none; padding: 5px; text-decoration: none;}

/*media queries are used to change the width of the cards at different viewport sizes*/
@media only screen and (max-width: 1024px) {
	  .card {width: 45%;}
}

 @media only screen and (max-width: 600px) {
      .card {width: 90%;}
}